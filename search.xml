<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>关于 App 内嵌 H5 的友盟自定义事件使用方法</title>
      <link href="posts/38b9.html"/>
      <url>posts/38b9.html</url>
      
        <content type="html"><![CDATA[<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>在产品经理的穷追不舍、软磨硬破下，无奈的接下了这个需求，之前没做过，以为比较麻烦，后来在看了项目文档之后，发现相比较 App 而言， H5 的工作量其实是微乎其微的，就是测试起来比较麻烦，需要等待 90s 才能观察到上报事件，所以建议先写一个，测试没有问题的情况下，将所有自定义事件全部写好，然后来一杯☕️，边品尝边测试。</p><p>友盟地址：<a href="https://www.umeng.com/analytics">友盟</a></p><p>友盟Demo地址：<a href="https://github.com/umeng/Hybrid_Component">Demo</a></p><p>友盟Hybird文档：<a href="https://developer.umeng.com/docs/66632/detail/67585">Hybird</a></p><h3 id="引入友盟的-UMAnalytics-js-文件"><a href="#引入友盟的-UMAnalytics-js-文件" class="headerlink" title="引入友盟的 UMAnalytics.js 文件"></a>引入友盟的 <strong>UMAnalytics.js</strong> 文件</h3><p>以 react 项目为例：我们需要引入一个友盟 <a href="https://github.com/umeng/Hybrid_Component">Demo</a> 的 <a href="https://github.com/umeng/Hybrid_Component/blob/master/UMHybrid/js/UMAnalytics.js"><strong>UMAnalytics.js</strong></a> 文件，我是直接复制代码到项目中的</p><p>/util/UMAnalytics.js   源码如下：</p><pre class=" language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">loadURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> iFrame<span class="token punctuation">;</span>  iFrame <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"iframe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  iFrame<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>  iFrame<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"style"</span><span class="token punctuation">,</span> <span class="token string">"display:none;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  iFrame<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"height"</span><span class="token punctuation">,</span> <span class="token string">"0px"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  iFrame<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"width"</span><span class="token punctuation">,</span> <span class="token string">"0px"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  iFrame<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"frameborder"</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>iFrame<span class="token punctuation">)</span><span class="token punctuation">;</span>  iFrame<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>iFrame<span class="token punctuation">)</span><span class="token punctuation">;</span>  iFrame <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">exec</span><span class="token punctuation">(</span>funName<span class="token punctuation">,</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> commend <span class="token operator">=</span> <span class="token punctuation">{</span>      functionName <span class="token punctuation">:</span> funName<span class="token punctuation">,</span>      arguments <span class="token punctuation">:</span> args  <span class="token punctuation">}</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> jsonStr <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>commend<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> url <span class="token operator">=</span> <span class="token string">"umanalytics:"</span> <span class="token operator">+</span> jsonStr<span class="token punctuation">;</span>  <span class="token function">loadURL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">var</span> UMAnalyticsAgent <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">/**   * 自定义事件数量统计   *   * @param eventId   *            NSString类型.事件ID，注意需要先在友盟网站注册此ID   */</span>  onEvent <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>eventId<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"onEvent"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> eventId <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 自定义事件数量统计   *   * @param eventId   *            NSString类型.事件ID， 注意需要先在友盟网站注册此ID   * @param eventLabel   *            NSString类型.事件标签，事件的一个属性说明   */</span>  onEventWithLabel <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>eventId<span class="token punctuation">,</span> eventLabel<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"onEventWithLabel"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> eventId<span class="token punctuation">,</span> eventLabel <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 自定义事件数量统计   *   * @param eventId   *            NSString类型.事件ID， 注意需要先在友盟网站注册此ID   * @param eventData   *            NSDictionary类型.当前事件的属性集合，最多支持10个K-V值   */</span>  onEventWithParameters <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>eventId<span class="token punctuation">,</span> eventData<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"onEventWithParameters"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> eventId<span class="token punctuation">,</span> eventData <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 自定义事件数值型统计   *   * @param eventId   *            NSString类型.事件ID，注意要先在友盟网站上注册此事件ID   * @param eventData   *            NSDictionary类型.事件的属性集合，最多支持10个K-V值   * @param eventNum   *            int 类型.事件持续时长，单位毫秒，您需要手动计算并传入时长，作为事件的时长参数   *   */</span>  onEventWithCounter <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>eventId<span class="token punctuation">,</span> eventData<span class="token punctuation">,</span> eventNum<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"onEventWithCounter"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> eventId<span class="token punctuation">,</span> eventData<span class="token punctuation">,</span> eventNum <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 页面统计开始时调用   *   * @param pageName   *            NSString类型.页面名称   */</span>  onPageBegin <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>pageName<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"onPageBegin"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> pageName <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 页面统计结束时调用   *   * @param pageName   *            NSString类型.页面名称   */</span>  onPageEnd <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>pageName<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"onPageEnd"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> pageName <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 统计帐号登录接口 *   *   * @param UID   *            用户账号ID,长度小于64字节   */</span>  profileSignInWithPUID <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>UID<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"profileSignInWithPUID"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> UID <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 统计帐号登录接口 *   *   * @param provider   *            帐号来源.用户通过第三方账号登陆,可以调用此接口进行统计.不能以下划线"_"开头,使用大写字母和数字标识,长度小于32字节;   *            如果是上市公司,建议使用股票代码.   * @param UID   *            用户账号ID,长度小于64字节   */</span>  profileSignInWithPUIDWithProvider <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>provider<span class="token punctuation">,</span> UID<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"profileSignInWithPUIDWithProvider"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> provider<span class="token punctuation">,</span> UID <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 帐号统计退出接口   */</span>  profileSignOff <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"profileSignOff"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 当玩家建立角色或者升级时，需调用此接口   *   * @param level   *            int类型.等级   */</span>  setUserLevelId <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>level<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"setUserLevelId"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> level <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 游戏中关卡开始的时候调用此方法。   *   * @param level   *            NSString类型.   */</span>  startLevel <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>level<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"startLevel"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> level <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 游戏中成功过关的时候调用此方法   *   * @param level   *            NSString类型.   */</span>  finishLevel <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>level<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"finishLevel"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> level <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 游戏中在某一关卡失败的时候调用此方法   *   * @param level   *            NSString类型.   */</span>  failLevel <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>level<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"failLevel"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> level <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 统计订单的接口   *   * @param currencyAmount   *            double类型.货币金额   * @param currencyType   *            NSString类型.货币类型   * @param virtualAmount   *            double类型.虚拟货币金额   * @param channel   *            int类型.   *            &lt;/p>   *            本次消费的途径:1.AppStore 2.支付宝 3.网银 4.财付通 5.移动 6.联通 7.电信 8.paypal   * @param orderId   *            NSString类型.订单ID   */</span>  exchange <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>currencyAmount<span class="token punctuation">,</span> currencyType<span class="token punctuation">,</span> virtualAmount<span class="token punctuation">,</span> channel<span class="token punctuation">,</span>                      orderId<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"exchange"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> currencyAmount<span class="token punctuation">,</span> currencyType<span class="token punctuation">,</span> virtualAmount<span class="token punctuation">,</span>                        channel<span class="token punctuation">,</span> orderId <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 游戏中真实消费（充值）的时候调用此方法 1.AppStore 2.支付宝 3.网银 4.财付通 5.移动 6.联通 7.电信 8.paypal   *   * @param money   *            double类型.本次消费金额   * @param coin   *            double类型.本次消费等值的虚拟币   * @param source   *            int类型.本次消费的途径，网银，支付宝 等   */</span>  pay <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>money<span class="token punctuation">,</span> coin<span class="token punctuation">,</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"pay"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> money<span class="token punctuation">,</span> coin<span class="token punctuation">,</span> source <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 游戏中真实消费（购买物品）的时候调用此方法   *   * @param money   *            double类型.本地消费金额   * @param item   *            NSString类型. 本次购买物品名称   * @param number   *            int类型.本地购买物品数量   * @param price   *            double类型.本地购买等值虚拟币   * @param source   *            int类型.本次消费的途径，网银支付宝等   */</span>  payWithItem <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>money<span class="token punctuation">,</span> item<span class="token punctuation">,</span> number<span class="token punctuation">,</span> price<span class="token punctuation">,</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"payWithItem"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> money<span class="token punctuation">,</span> item<span class="token punctuation">,</span> number<span class="token punctuation">,</span> price<span class="token punctuation">,</span> source <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 游戏中虚拟消费（购买物品）的时候调用此方法   *   * @param item   *            NSString类型.本地购买的物品名称   * @param number   *            int类型.本地购买的物品数量   * @param price   *            double类型.本地购买花费的虚拟币数量   */</span>  buy <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> number<span class="token punctuation">,</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"buy"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> item<span class="token punctuation">,</span> number<span class="token punctuation">,</span> price <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 游戏中使用道具时候调用此方法   *   * @param item   *            NSString类型. 道具名称   * @param number   *            int类型. 数量   * @param price   *            double类型.等值虚拟币   */</span>  use <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> number<span class="token punctuation">,</span> price<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"use"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> item<span class="token punctuation">,</span> number<span class="token punctuation">,</span> price <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 游戏中免费获得额外金币时调用此方法   *   * @param item   *            NSString类型. 道具名称   * @param number   *            int类型. 数量   * @param price   *            double类型.等值虚拟币   * @param source   *            int类型.本次消费的途径，网银支付宝等   */</span>  bonusWithItem <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> number<span class="token punctuation">,</span> price<span class="token punctuation">,</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"bonusWithItem"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> item<span class="token punctuation">,</span> number<span class="token punctuation">,</span> price<span class="token punctuation">,</span> source <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/**   * 游戏中免费获得额外金币时调用此方法   *   * @param coin   *            double类型. 奖励金币数额   * @param source   *            int类型.奖励金币的触发原因   */</span>  bonus <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>coin<span class="token punctuation">,</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"bonus"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> coin<span class="token punctuation">,</span> source <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/** Dplus增加事件   * @param eventName 事件名   *              NSString类型.事件名   *   */</span>  track <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>eventName<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"track"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> eventName <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/** Dplus增加事件   * @param eventName   *              NSString类型.事件名   * @param property   *              NSDictionary类型.自定义属性   *   */</span>  trackWithProperty <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>eventName<span class="token punctuation">,</span> property<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"trackWithProperty"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> eventName<span class="token punctuation">,</span> property<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/** * 设置属性 键值对 会覆盖同名的key   * 将该函数指定的key-value写入dplus专用文件；APP启动时会自动读取该文件的所有key-value，并将key-value自动作为后续所有track事件的属性。   * @param property   *              NSDictionary类型.自定义属性   *   */</span>  registerSuperProperty <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>property<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"registerSuperProperty"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>property<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/** * 从dplus专用文件中删除指定key-value   * @param propertyName   *              NSString类型.自定义属性   *   */</span>  unregisterSuperProperty <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>propertyName<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"unregisterSuperProperty"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>propertyName<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/** 返回dplus专用文件中key对应的value；如果不存在，则返回空   * @param propertyName   *              NSString类型.自定义属性   *   */</span>  getSuperProperty <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>propertyName<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"getSuperProperty"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>propertyName<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/** 返回Dplus专用文件中的所有key-value；如果不存在，则返回空。   *   */</span>  getSuperProperties <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"getSuperProperties"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/** * 清空Dplus专用文件中的所有key-value。   *   */</span>  clearSuperProperties <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"clearSuperProperties"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">/** * 设置关注事件是否首次触发,只关注eventList前五个合法eventID.只要已经保存五个,此接口无效   * @param eventList   *              NSArray类型.自定义属性   *   */</span>  setFirstLaunchEvent <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>eventList<span class="token punctuation">)</span> <span class="token punctuation">{</span>      <span class="token function">exec</span><span class="token punctuation">(</span><span class="token string">"setFirstLaunchEvent"</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>eventList<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> UMAnalyticsAgent</code></pre><p>从引入的 js 文件可以看出，上报自定义事件的方法旨在创建一个 iframe 标签，然后由客户端（App）来拦截 H5 页面中的 iframe 标签，从而实现 H5 的点击或者页面加载事件能够成功上报到友盟上</p><p>所以前端的工作只需要处理事件点击和加载时调用相应的 api 即可，UMAnalytics.js 会自动创建 iframe，下面开始使用 api 。</p><h3 id="对-UMAnalytics-js-中的-API-进行封装（根据自己项目需求）"><a href="#对-UMAnalytics-js-中的-API-进行封装（根据自己项目需求）" class="headerlink" title="对 UMAnalytics.js 中的 API 进行封装（根据自己项目需求）"></a>对 UMAnalytics.js 中的 API 进行封装（根据自己项目需求）</h3><p>自定义事件中包含有很多参数，其中 事件ID <code>eventId</code> 必传，其他参数封装成一个对象上传，根据产品需求，我对 <code>UMAnalyticsAgent.onEventWithParameters</code>  进行了一个简单的封装。</p><p>/util/YouMeng.js    源码如下：</p><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> UMAnalyticsAgent <span class="token keyword">from</span> <span class="token string">'./UMAnalytics'</span><span class="token punctuation">;</span><span class="token keyword">import</span> UserCenter <span class="token keyword">from</span> <span class="token string">'../module/UserCenter'</span><span class="token punctuation">;</span><span class="token keyword">import</span> util <span class="token keyword">from</span> <span class="token string">'./util'</span><span class="token punctuation">;</span><span class="token keyword">import</span> cache <span class="token keyword">from</span> <span class="token string">'./cache'</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">onEventWithParameters</span><span class="token punctuation">(</span>eventId<span class="token punctuation">,</span> eventData<span class="token punctuation">)</span> <span class="token punctuation">{</span>  UMAnalyticsAgent<span class="token punctuation">.</span><span class="token function">onEventWithParameters</span><span class="token punctuation">(</span>eventId<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token operator">...</span>eventData<span class="token punctuation">,</span> eventId<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">YouMeng</span><span class="token punctuation">(</span>eventId<span class="token punctuation">,</span> eventData<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>util<span class="token punctuation">.</span><span class="token function">isInYuantuApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment" spellcheck="true">// 仅在慧医app中</span>    <span class="token keyword">return</span>   <span class="token punctuation">}</span>  <span class="token keyword">let</span> userId <span class="token operator">=</span> cache<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token string">'userId'</span><span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>    UserCenter<span class="token punctuation">.</span><span class="token function">getUserInfo</span><span class="token punctuation">(</span>eventData<span class="token punctuation">.</span>unionId<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      onSuccess<span class="token punctuation">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span>          userId <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>id          <span class="token function">onEventWithParameters</span><span class="token punctuation">(</span>eventId<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token operator">...</span>eventData<span class="token punctuation">,</span> userId <span class="token punctuation">}</span><span class="token punctuation">)</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>    <span class="token function">onEventWithParameters</span><span class="token punctuation">(</span>eventId<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token operator">...</span>eventData<span class="token punctuation">,</span> userId <span class="token punctuation">}</span><span class="token punctuation">)</span>   <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">export</span> <span class="token keyword">default</span> YouMeng</code></pre><h3 id="使用封装好的-YouMeng-组件"><a href="#使用封装好的-YouMeng-组件" class="headerlink" title="使用封装好的 YouMeng 组件"></a>使用封装好的 YouMeng 组件</h3><ol><li>在需要上报的页面中引入组件：</li></ol><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> YouMeng <span class="token keyword">from</span> <span class="token string">'./lib/YouMeng'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">// 组件所在目录</span></code></pre><ol start="2"><li>使用组件</li></ol><pre class=" language-js"><code class="language-js"><span class="token function">YouMeng</span><span class="token punctuation">(</span><span class="token string">'BindCardSuccess'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> unionId<span class="token punctuation">:</span> _this<span class="token punctuation">.</span>query<span class="token punctuation">.</span>unionId <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h2 id="查看友盟实时-90s延迟-数据"><a href="#查看友盟实时-90s延迟-数据" class="headerlink" title="查看友盟实时(90s延迟)数据"></a>查看友盟实时(90s延迟)数据</h2><p><img src="https://front-images.oss-cn-hangzhou.aliyuncs.com/i4/f604cd5e8dcd62ff4c9fb4c8a6895ec1-2794-1174.png" alt="友盟自定义事件统计图"></p>]]></content>
      
      
      <categories>
          
          <category> 数据分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> h5 </tag>
            
            <tag> 友盟 </tag>
            
            <tag> 数据分析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS 安装 mongoDB 报错问题</title>
      <link href="posts/855a.html"/>
      <url>posts/855a.html</url>
      
        <content type="html"><![CDATA[<p>brew tap mongodb/brew</p><p>brew install <a href="mailto:mongodb-community@4.2">mongodb-community@4.2</a></p><h2 id="文件路径"><a href="#文件路径" class="headerlink" title="文件路径"></a>文件路径</h2><p>配置文件：/usr/local/etc/mongod.conf</p><p>日志目录路径：/usr/local/var/log/mongodb</p><p>数据目录路径：/usr/local/var/mongodb</p><h2 id="启动-amp-停止"><a href="#启动-amp-停止" class="headerlink" title="启动&amp;停止"></a>启动&amp;停止</h2><p>brew services start mongodb-community</p><p>brew services stop mongodb-community</p><h2 id="手动启动-mongod"><a href="#手动启动-mongod" class="headerlink" title="手动启动 mongod"></a>手动启动 mongod</h2><h3 id="如果不需要或不需要后台MongoDB服务，可以运行："><a href="#如果不需要或不需要后台MongoDB服务，可以运行：" class="headerlink" title="如果不需要或不需要后台MongoDB服务，可以运行："></a>如果不需要或不需要后台MongoDB服务，可以运行：</h3><p>mongod –config /usr/local/etc/mongod.conf</p><p>【注】如果不包括–config选项具有配置文件的路径，则MongoDB服务器没有默认配置文件或日志目录路径，并且将使用 /data/db.</p><h3 id="关机-mongod-手动启动，请使用-admin-数据库和运行-db-shutdownServer"><a href="#关机-mongod-手动启动，请使用-admin-数据库和运行-db-shutdownServer" class="headerlink" title="关机 mongod 手动启动，请使用 admin 数据库和运行 db.shutdownServer():"></a>关机 mongod 手动启动，请使用 admin 数据库和运行 db.shutdownServer():</h3><p>mongo admin –eval “db.shutdownServer()”</p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx 安装及对 antd Pro 项目进行 nginx 配置和 gzip 压缩</title>
      <link href="posts/1512.html"/>
      <url>posts/1512.html</url>
      
        <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><hr><h3 id="更新update"><a href="#更新update" class="headerlink" title="更新update"></a>更新update</h3><pre><code>apt-get update</code></pre><h3 id="安装-nginx"><a href="#安装-nginx" class="headerlink" title="安装 nginx"></a>安装 nginx</h3><pre><code>sudo apt-get install nginx</code></pre><h3 id="查看是否安装成功"><a href="#查看是否安装成功" class="headerlink" title="查看是否安装成功"></a>查看是否安装成功</h3><pre><code>nginx -v</code></pre><h2 id="运行-nginx"><a href="#运行-nginx" class="headerlink" title="运行 nginx"></a>运行 nginx</h2><hr><h3 id="启动-nginx"><a href="#启动-nginx" class="headerlink" title="启动 nginx"></a>启动 nginx</h3><pre><code>service nginx start</code></pre><h3 id="查看-nginx-是否启动"><a href="#查看-nginx-是否启动" class="headerlink" title="查看 nginx 是否启动"></a>查看 nginx 是否启动</h3><pre><code>ps -ef | grep nginx</code></pre><h3 id="停止-nginx"><a href="#停止-nginx" class="headerlink" title="停止 nginx"></a>停止 nginx</h3><pre><code>service nginx stop</code></pre><h3 id="重启-nginx"><a href="#重启-nginx" class="headerlink" title="重启 nginx"></a>重启 nginx</h3><pre><code>service nginx restart</code></pre><h2 id="配置-nginx-服务"><a href="#配置-nginx-服务" class="headerlink" title="配置 nginx 服务"></a>配置 nginx 服务</h2><hr><h3 id="修改配置文件-nginx-conf"><a href="#修改配置文件-nginx-conf" class="headerlink" title="修改配置文件 nginx.conf"></a>修改配置文件 nginx.conf</h3><pre><code>vim /etc/nginx/nginx.conf</code></pre><hr><h3 id="antd-Pro-配置信息"><a href="#antd-Pro-配置信息" class="headerlink" title="antd Pro 配置信息"></a>antd Pro 配置信息</h3><pre><code>    server {        listen 80;        # gzip config        gzip on;        gzip_min_length 1k;        gzip_comp_level 9;        gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;        gzip_vary on;        gzip_disable "MSIE [1-6]\.";        root ~/weData/build/index.html;        location / {            # 用于配合 browserHistory使用            try_files $uri $uri/ /index.html;            # 如果有资源，建议使用 https + http2，配合按需加载可以获得更好的体验            # rewrite ^/(.*)$ https://preview.pro.ant.design/$1 permanent;        }        location /api {            proxy_pass https://localhost:8080/;            proxy_set_header   X-Forwarded-Proto $scheme;            proxy_set_header   X-Real-IP         $remote_addr;        }    }</code></pre>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu18.04 安装 MongoDB 4.0</title>
      <link href="posts/fdd6.html"/>
      <url>posts/fdd6.html</url>
      
        <content type="html"><![CDATA[<h2 id="ubuntu18-04-安装-MongoDB-4-0"><a href="#ubuntu18-04-安装-MongoDB-4-0" class="headerlink" title="ubuntu18.04 安装 MongoDB 4.0"></a>ubuntu18.04 安装 MongoDB 4.0</h2><hr><blockquote><p>在终端输入GPK码</p></blockquote><pre><code>$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4</code></pre><blockquote><p>添加 MongoDB 源</p></blockquote><h5 id="Ubuntu-18-04-LTS"><a href="#Ubuntu-18-04-LTS" class="headerlink" title="Ubuntu 18.04 LTS:"></a>Ubuntu 18.04 LTS:</h5><pre><code>$ echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb.list</code></pre><h5 id="Ubuntu-16-04-LTS"><a href="#Ubuntu-16-04-LTS" class="headerlink" title="Ubuntu 16.04 LTS:"></a>Ubuntu 16.04 LTS:</h5><pre><code>$ echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/4.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb.list</code></pre><blockquote><p>安装 MongoDB Server</p></blockquote><pre><code>$ sudo apt update$ sudo apt install mongodb-org</code></pre><blockquote><p>对 MongoDB Server 的管理</p></blockquote><pre><code>sudo systemctl enable mongod 允许开机启动sudo systemctl start mongod立即启动mongod</code></pre><blockquote><p>验证mongoDB4.0</p></blockquote><pre><code>mongod --version</code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongoDB </tag>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用 git 指令集合</title>
      <link href="posts/6cbf.html"/>
      <url>posts/6cbf.html</url>
      
        <content type="html"><![CDATA[<h3 id="查看本地分支"><a href="#查看本地分支" class="headerlink" title="查看本地分支"></a>查看本地分支</h3><pre><code>git branch     </code></pre><h3 id="查看远程分支"><a href="#查看远程分支" class="headerlink" title="查看远程分支"></a>查看远程分支</h3><pre><code>git branch -a</code></pre><h3 id="创建新分支"><a href="#创建新分支" class="headerlink" title="创建新分支"></a>创建新分支</h3><pre><code>git checkout -b [本地分支]</code></pre><h3 id="将本地分支关联到远程的新建的同名分支上"><a href="#将本地分支关联到远程的新建的同名分支上" class="headerlink" title="将本地分支关联到远程的新建的同名分支上"></a>将本地分支关联到远程的新建的同名分支上</h3><pre><code>git push remote [dev]:[dev]</code></pre><h3 id="删除远程分支两种方法"><a href="#删除远程分支两种方法" class="headerlink" title="删除远程分支两种方法"></a>删除远程分支两种方法</h3><pre><code>git push origin --delete [远程分支]git push origin :[远程分支]    （推送空分支，相当于删除远程分支）</code></pre><h3 id="删除本地分支"><a href="#删除本地分支" class="headerlink" title="删除本地分支"></a>删除本地分支</h3><pre><code>git branch -D [本地分支]</code></pre><h3 id="查找之前的分支的commit-id"><a href="#查找之前的分支的commit-id" class="headerlink" title="查找之前的分支的commit-id"></a>查找之前的分支的commit-id</h3><pre><code>git log -g </code></pre><h3 id="误删本地分支找回"><a href="#误删本地分支找回" class="headerlink" title="误删本地分支找回"></a>误删本地分支找回</h3><pre><code>git branch [新本地分支名] [commit-id]</code></pre><h3 id="创建新分支关联远程分支"><a href="#创建新分支关联远程分支" class="headerlink" title="创建新分支关联远程分支"></a>创建新分支关联远程分支</h3><pre><code>git checkout -b [本地分支] origin/[远程分支]</code></pre><h3 id="缓存修改的内容"><a href="#缓存修改的内容" class="headerlink" title="缓存修改的内容"></a>缓存修改的内容</h3><pre><code>git stash save '账单改造'推出最后缓存一次的修改内容git stash pop查看还在堆栈中的缓存git stash list</code></pre><h3 id="合并分支"><a href="#合并分支" class="headerlink" title="合并分支"></a>合并分支</h3><pre><code>切到主分支git checkout master拉取落后的提交代码git pull切到需要合并到分支git checkout daily/2.5.1提示落后提交git pull分支合并到主分支git rebase master遇到代码冲突，解决后继续提交git add .git rebase --continue创建新分支git checkout -b daily/2.7.0git add .git commit -m 'feat: 新增广告位'</code></pre><h3 id="合并-commit"><a href="#合并-commit" class="headerlink" title="合并 commit"></a>合并 commit</h3><pre><code>查看提交的所有 commitgit log合并两个commitgit rebase -i HEAD~2将第二行的 'feat:' 改成 's'，修改第一行的信息并保存</code></pre><h3 id="撤销-pull-指令-回退版本"><a href="#撤销-pull-指令-回退版本" class="headerlink" title="撤销 pull 指令 / 回退版本"></a>撤销 pull 指令 / 回退版本</h3><pre><code>运行 `git reflog` 命令查看你的历史变更记录用git reset --hard HEAD@{n}，（n是你要回退到的引用位置）回退</code></pre><h3 id="同步主干代码"><a href="#同步主干代码" class="headerlink" title="同步主干代码"></a>同步主干代码</h3><pre><code>git pull origin master --rebase</code></pre><h3 id="将一个A分支的-commit-合到另一个B分支"><a href="#将一个A分支的-commit-合到另一个B分支" class="headerlink" title="将一个A分支的 commit 合到另一个B分支"></a>将一个A分支的 commit 合到另一个B分支</h3><pre><code>1. 首先切到 A 分支git log   // 找到需要合的 commit 的哈希值 commit-id ，复制一下2. 切到 B 分支git cherry-pick commit-id 3. 提交，处理冲突</code></pre>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 常用指令</title>
      <link href="posts/6f9b.html"/>
      <url>posts/6f9b.html</url>
      
        <content type="html"><![CDATA[<ul><li>查看端口是否被占用  <code>netstat -ap | grep 80</code>  或者  <code>lsof -i:8090  </code></li><li>杀掉正在运行的端口 <code>kill -9 PID</code></li><li>杀掉 TCP 连接状态是 TIME_WAIT <code>lsof -n -i@127.0.0.1|grep 27017</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>千岛湖旅游</title>
      <link href="posts/f5f0.html"/>
      <url>posts/f5f0.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 旅游 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 旅游 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>webpack 单页配置指南</title>
      <link href="posts/dd44.html"/>
      <url>posts/dd44.html</url>
      
        <content type="html"><![CDATA[<h3 id="一、基本概念"><a href="#一、基本概念" class="headerlink" title="一、基本概念"></a>一、基本概念</h3><ul><li>entry</li><li>output - [filename, path] - resolve</li><li>module - rules - (loader) - [test, use]</li><li>plugins - 下载 - 引入 - 使用</li><li>mode</li><li>devServer</li></ul><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i webpack webpack-cli -D</code></pre><h3 id="二、loader"><a href="#二、loader" class="headerlink" title="二、loader"></a>二、loader</h3><p>实例：处理 <code>css, less 样式文件</code>、<code> img 等图片文件</code> 及<code>其他资源</code>的 loader</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  entry<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'build.js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  mode<span class="token punctuation">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        test<span class="token punctuation">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token comment" spellcheck="true">// use 执行顺序 从下往上</span>          <span class="token comment" spellcheck="true">// 创建 style 标签，将 js 中样式资源插入，添加到 head 中生效</span>          <span class="token string">'style-loader'</span><span class="token punctuation">,</span>          <span class="token comment" spellcheck="true">// 将 css 文件变成 commonjs 模块加载到 js 中，内容是样式字符串</span>          <span class="token string">'css-loader'</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        test<span class="token punctuation">:</span> <span class="token regex">/\.less$/</span><span class="token punctuation">,</span>        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token comment" spellcheck="true">// use 执行顺序 从下往上</span>          <span class="token comment" spellcheck="true">// 创建 style 标签，将 js 中样式资源插入，添加到 head 中生效</span>          <span class="token string">'style-loader'</span><span class="token punctuation">,</span>          <span class="token comment" spellcheck="true">// 将 css 文件变成 commonjs 模块加载到 js 中，内容是样式字符串</span>          <span class="token string">'css-loader'</span><span class="token punctuation">,</span>          <span class="token comment" spellcheck="true">// 将 less 文件变成 css 文件</span>          <span class="token comment" spellcheck="true">// npm i less less-loader -D</span>          <span class="token string">'less-loader'</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 问题：默认处理不了 html 中 img 图片（使用 html-loader 解决）</span>        test<span class="token punctuation">:</span> <span class="token regex">/\.(jpg|png|gif)$/</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 只有一个 loader 可以直接 loader，不需要使用 use</span>        <span class="token comment" spellcheck="true">// 下载 url-loader file-loader 两个包</span>        loader<span class="token punctuation">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span>        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">// 图片大小小于8kb就会被base64处理</span>          <span class="token comment" spellcheck="true">// 优点：减少请求数量</span>          <span class="token comment" spellcheck="true">// 缺点：图片体积会更大（文件请求速度更慢）</span>          limit<span class="token punctuation">:</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span>          <span class="token comment" spellcheck="true">// 问题：url-loader 默认使用 ES6 模块化解析</span>          <span class="token comment" spellcheck="true">//             html-loader 默认使用 commonjs 解析，解析会报错</span>          <span class="token comment" spellcheck="true">// 解决：关闭 ES6 模块化处理</span>          esModule<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>          <span class="token comment" spellcheck="true">// 给图片重命名，取hash前10位，取图片原扩展名</span>          name<span class="token punctuation">:</span> <span class="token string">'[hash:10][.ext]'</span><span class="token punctuation">,</span>          outputPath<span class="token punctuation">:</span> <span class="token string">'imgs'</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 专门处理 html 中 img 文件图片</span>        <span class="token comment" spellcheck="true">// 负责引入 img 图片，能被 url-loader 处理</span>        test<span class="token punctuation">:</span> <span class="token regex">/\.html$/</span><span class="token punctuation">,</span>        loader<span class="token punctuation">:</span> <span class="token string">'html-loader'</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 打包其他资源</span>        exclude<span class="token punctuation">:</span> <span class="token regex">/\.(html|js|css|less|jpg|png|gif)$/</span><span class="token punctuation">,</span>        loader<span class="token punctuation">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span>        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>          name<span class="token punctuation">:</span> <span class="token string">'[hash:10][.ext]'</span><span class="token punctuation">,</span>          outputPath<span class="token punctuation">:</span> <span class="token string">'media'</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i css-loader style-loader <span class="token function">less</span> less-loader -D</code></pre><h3 id="三、plugins"><a href="#三、plugins" class="headerlink" title="三、plugins"></a>三、plugins</h3><p>实例：打包 html 文件</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  entry<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'build.js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  mode<span class="token punctuation">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token comment" spellcheck="true">// loader 的配置</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token comment" spellcheck="true">// 默认创建一个空 html 文件，自动引入输出的所有资源（js/css)，不具有 html 结构</span>    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">// 复制 './src/index.html' 文件，并自动引入输出的所有资源</span>      template<span class="token punctuation">:</span> <span class="token string">'./src/index.html'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i html-webpack-plugin -D<span class="token function">npm</span> i url-loader file-loader -D<span class="token function">npm</span> i html-loader -D</code></pre><h3 id="四、开发服务器-devServer"><a href="#四、开发服务器-devServer" class="headerlink" title="四、开发服务器 devServer"></a>四、开发服务器 devServer</h3><p>用来自动化（自动编译、自动打开浏览器、自动刷新浏览器）</p><p>启动指令：<code>npx webpack-dev-server</code></p><p>当 webpack 版本为 5.x，而 webpack-dev-server 版本为 3.x时，启动命令：npx webpack serve –open true</p><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  entry<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'build.js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  mode<span class="token punctuation">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token comment" spellcheck="true">// loader 配置</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token comment" spellcheck="true">// plugins 配置</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 特点：只会在内存中打包，不会有任何输出</span>  devServer<span class="token punctuation">:</span> <span class="token punctuation">{</span>    contentBase<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 启动 gzip 压缩</span>    compress<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    port<span class="token punctuation">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 自动打开默认浏览器</span>    open<span class="token punctuation">:</span> <span class="token boolean">true</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre><code>npm i webpack-dev-server -D</code></pre><h3 id="五、生产环境配置"><a href="#五、生产环境配置" class="headerlink" title="五、生产环境配置"></a>五、生产环境配置</h3><h4 id="1-提取-css-为单独文件"><a href="#1-提取-css-为单独文件" class="headerlink" title="1. 提取 css 为单独文件"></a>1. 提取 css 为单独文件</h4><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'mini-css-extract-plugin'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  entry<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'build.js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  mode<span class="token punctuation">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        test<span class="token punctuation">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token comment" spellcheck="true">// 'style-loader',</span>          <span class="token comment" spellcheck="true">// 用MiniCssExtractPlugin.loader替换style-loader：提取js中的css为单独文件</span>          MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>          <span class="token comment" spellcheck="true">// 将 css 文件变成 commonjs 模块加载到 js 中，内容是样式字符串</span>          <span class="token string">'css-loader'</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      template<span class="token punctuation">:</span> <span class="token string">'./src/index.html'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      filename<span class="token punctuation">:</span> <span class="token string">'css/index.css'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i mini-css-extract-plugin -D</code></pre><h4 id="2-css-兼容性处理"><a href="#2-css-兼容性处理" class="headerlink" title="2. css 兼容性处理"></a>2. css 兼容性处理</h4><p>通过 <code>postcss</code> 找到 package.json 中 <code>browserslist</code> 里面的配置，通过配置加载指定的 css 兼容性样式</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">/*** webpack.config.js**/</span><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'mini-css-extract-plugin'</span><span class="token punctuation">)</span>postcss<span class="token punctuation">.</span>env<span class="token punctuation">.</span>NODE_ENV <span class="token operator">=</span> <span class="token string">'development'</span>    <span class="token comment" spellcheck="true">// package.json 开发环境时，必须配置</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  entry<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'build.js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  mode<span class="token punctuation">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        test<span class="token punctuation">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>          MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>          <span class="token string">'css-loader'</span><span class="token punctuation">,</span>          <span class="token comment" spellcheck="true">// css 兼容性处理</span>          <span class="token comment" spellcheck="true">// loader 修改配置</span>          <span class="token punctuation">{</span>            loader<span class="token punctuation">:</span> <span class="token string">'postcss-loader'</span><span class="token punctuation">,</span>            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>              ident<span class="token punctuation">:</span> <span class="token string">'postcss'</span><span class="token punctuation">,</span>              plugins<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">[</span>                <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'postcss-preset-env'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token punctuation">]</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      template<span class="token punctuation">:</span> <span class="token string">'./src/index.html'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      filename<span class="token punctuation">:</span> <span class="token string">'css/index.css'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><p>webpack 打包时默认查找 package.json 中 browserslist 的生产环境，而非 webpack.config.js 中的 mode 。</p><pre class=" language-json"><code class="language-json">/*** package.json**/<span class="token punctuation">{</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"a"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"index.js"</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"test"</span><span class="token operator">:</span> <span class="token string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"keywords"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"license"</span><span class="token operator">:</span> <span class="token string">"ISC"</span><span class="token punctuation">,</span>  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"css-loader"</span><span class="token operator">:</span> <span class="token string">"^5.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"file-loader"</span><span class="token operator">:</span> <span class="token string">"^6.1.1"</span><span class="token punctuation">,</span>    <span class="token property">"html-loader"</span><span class="token operator">:</span> <span class="token string">"^1.3.2"</span><span class="token punctuation">,</span>    <span class="token property">"html-webpack-plugin"</span><span class="token operator">:</span> <span class="token string">"^4.5.0"</span><span class="token punctuation">,</span>    <span class="token property">"less"</span><span class="token operator">:</span> <span class="token string">"^3.12.2"</span><span class="token punctuation">,</span>    <span class="token property">"less-loader"</span><span class="token operator">:</span> <span class="token string">"^7.0.2"</span><span class="token punctuation">,</span>    <span class="token property">"mini-css-extract-plugin"</span><span class="token operator">:</span> <span class="token string">"^1.1.0"</span><span class="token punctuation">,</span>    <span class="token property">"postcss-loader"</span><span class="token operator">:</span> <span class="token string">"^4.0.4"</span><span class="token punctuation">,</span>    <span class="token property">"postcss-preset-env"</span><span class="token operator">:</span> <span class="token string">"^6.7.0"</span><span class="token punctuation">,</span>    <span class="token property">"style-loader"</span><span class="token operator">:</span> <span class="token string">"^2.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"url-loader"</span><span class="token operator">:</span> <span class="token string">"^4.1.1"</span><span class="token punctuation">,</span>    <span class="token property">"webpack"</span><span class="token operator">:</span> <span class="token string">"^5.1.3"</span><span class="token punctuation">,</span>    <span class="token property">"webpack-cli"</span><span class="token operator">:</span> <span class="token string">"^4.1.0"</span><span class="token punctuation">,</span>    <span class="token property">"webpack-dev-server"</span><span class="token operator">:</span> <span class="token string">"^3.11.0"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"browserslist"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"development"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"last 1 chrome version"</span><span class="token punctuation">,</span>      <span class="token string">"last 1 firefox version"</span><span class="token punctuation">,</span>      <span class="token string">"last 1 safari version"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"production"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">">0.2%"</span><span class="token punctuation">,</span>      <span class="token string">"not dead"</span><span class="token punctuation">,</span>      <span class="token string">"not op_mini all"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre><code>npm i postcss-loader postcss-preset-env -D</code></pre><h4 id="3-压缩-css-代码-optimize-css-assets-webpack-plugin"><a href="#3-压缩-css-代码-optimize-css-assets-webpack-plugin" class="headerlink" title="3. 压缩 css 代码 (optimize-css-assets-webpack-plugin)"></a>3. 压缩 css 代码 (optimize-css-assets-webpack-plugin)</h4><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/*** webpack.config.js**/</span><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'mini-css-extract-plugin'</span><span class="token punctuation">)</span><span class="token keyword">const</span> OptimizeCssAssetsWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'optimize-css-assets-webpack-plugin'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  entry<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'build.js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  mode<span class="token punctuation">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        test<span class="token punctuation">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>        use<span class="token punctuation">:</span> <span class="token punctuation">[</span>          MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>          <span class="token string">'css-loader'</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            loader<span class="token punctuation">:</span> <span class="token string">'postcss-loader'</span><span class="token punctuation">,</span>            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>              ident<span class="token punctuation">:</span> <span class="token string">'postcss'</span><span class="token punctuation">,</span>              plugins<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'postcss-preset-env'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      template<span class="token punctuation">:</span> <span class="token string">'./src/index.html'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      filename<span class="token punctuation">:</span> <span class="token string">'css/index.css'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 压缩 css</span>    <span class="token keyword">new</span> <span class="token class-name">OptimizeCssAssetsWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i optimize-css-assets-webpack-plugin -D</code></pre><h4 id="4-javascript-语法检查-（eslint）"><a href="#4-javascript-语法检查-（eslint）" class="headerlink" title="4. javascript 语法检查 （eslint）"></a>4. javascript 语法检查 （eslint）</h4><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/*** webpack.config.js**/</span><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  entry<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'build.js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  mode<span class="token punctuation">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token comment" spellcheck="true">/**       * 语法检查，多人开发风格一致       * 只检查源代码，三方库除外       * 设置检查规则：       *    package.json 中 eslintConfig 中的设置       *    推荐 airbnb --> eslint-config-airbnb-base eslint eslint-plugin-import       *    eslint-config-airbnb 是 react 使用       * */</span>       <span class="token punctuation">{</span>        test<span class="token punctuation">:</span> <span class="token regex">/\.js$/</span><span class="token punctuation">,</span>        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>        loader<span class="token punctuation">:</span> <span class="token string">'eslint-loader'</span><span class="token punctuation">,</span>        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">// 自动修复 eslint 错误</span>          fix<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      template<span class="token punctuation">:</span> <span class="token string">'./src/index.html'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/*** index.js**/</span><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 下一行开始 eslint 所有规则都会失效</span><span class="token comment" spellcheck="true">// eslint-disable-next-line</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></code></pre><pre class=" language-json"><code class="language-json">/***    package.json*/<span class="token punctuation">{</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"a"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"index.js"</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"test"</span><span class="token operator">:</span> <span class="token string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"keywords"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"license"</span><span class="token operator">:</span> <span class="token string">"ISC"</span><span class="token punctuation">,</span>  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"css-loader"</span><span class="token operator">:</span> <span class="token string">"^5.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"eslint"</span><span class="token operator">:</span> <span class="token string">"^7.11.0"</span><span class="token punctuation">,</span>    <span class="token property">"eslint-config-airbnb-base"</span><span class="token operator">:</span> <span class="token string">"^14.2.0"</span><span class="token punctuation">,</span>    <span class="token property">"eslint-loader"</span><span class="token operator">:</span> <span class="token string">"^4.0.2"</span><span class="token punctuation">,</span>    <span class="token property">"eslint-plugin-import"</span><span class="token operator">:</span> <span class="token string">"^2.22.1"</span><span class="token punctuation">,</span>    <span class="token property">"file-loader"</span><span class="token operator">:</span> <span class="token string">"^6.1.1"</span><span class="token punctuation">,</span>    <span class="token property">"html-loader"</span><span class="token operator">:</span> <span class="token string">"^1.3.2"</span><span class="token punctuation">,</span>    <span class="token property">"html-webpack-plugin"</span><span class="token operator">:</span> <span class="token string">"^4.5.0"</span><span class="token punctuation">,</span>    <span class="token property">"less"</span><span class="token operator">:</span> <span class="token string">"^3.12.2"</span><span class="token punctuation">,</span>    <span class="token property">"less-loader"</span><span class="token operator">:</span> <span class="token string">"^7.0.2"</span><span class="token punctuation">,</span>    <span class="token property">"mini-css-extract-plugin"</span><span class="token operator">:</span> <span class="token string">"^1.1.0"</span><span class="token punctuation">,</span>    <span class="token property">"optimize-css-assets-webpack-plugin"</span><span class="token operator">:</span> <span class="token string">"^5.0.4"</span><span class="token punctuation">,</span>    <span class="token property">"postcss-loader"</span><span class="token operator">:</span> <span class="token string">"^4.0.4"</span><span class="token punctuation">,</span>    <span class="token property">"postcss-preset-env"</span><span class="token operator">:</span> <span class="token string">"^6.7.0"</span><span class="token punctuation">,</span>    <span class="token property">"style-loader"</span><span class="token operator">:</span> <span class="token string">"^2.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"url-loader"</span><span class="token operator">:</span> <span class="token string">"^4.1.1"</span><span class="token punctuation">,</span>    <span class="token property">"webpack"</span><span class="token operator">:</span> <span class="token string">"^5.1.3"</span><span class="token punctuation">,</span>    <span class="token property">"webpack-cli"</span><span class="token operator">:</span> <span class="token string">"^4.1.0"</span><span class="token punctuation">,</span>    <span class="token property">"webpack-dev-server"</span><span class="token operator">:</span> <span class="token string">"^3.11.0"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"browserslist"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"development"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"last 1 chrome version"</span><span class="token punctuation">,</span>      <span class="token string">"last 1 firefox version"</span><span class="token punctuation">,</span>      <span class="token string">"last 1 safari version"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"production"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">">0.2%"</span><span class="token punctuation">,</span>      <span class="token string">"not dead"</span><span class="token punctuation">,</span>      <span class="token string">"not op_mini all"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"eslintConfig"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"extends"</span><span class="token operator">:</span> <span class="token string">"airbnb-base"</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre><code>npm i eslint-config-airbnb-base eslint eslint-plugin-import eslint-loader -D</code></pre><h4 id="5-javascript-兼容性处理"><a href="#5-javascript-兼容性处理" class="headerlink" title="5. javascript 兼容性处理"></a>5. javascript 兼容性处理</h4><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/*** webpack.config.js**/</span><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  entry<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'build.js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  mode<span class="token punctuation">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token comment" spellcheck="true">/**       * js 兼容性处理：babel-loader  @babel/preset-env  @babel/core       * 1. 基本js兼容性处理： @babel/preset-env  （直接在 js 文件中 import 引入即可）       *    问题：只能转化基本语法，如 promise 不能转化       * 2. 全部js兼容性处理： @babel/polyfill       *    问题：体积太大       * 3. 按需兼容： core-js(使用第三种就不能使用第二种)       */</span>      <span class="token punctuation">{</span>        test<span class="token punctuation">:</span> <span class="token regex">/\.js$/</span><span class="token punctuation">,</span>        exclude<span class="token punctuation">:</span> <span class="token regex">/node_module/</span><span class="token punctuation">,</span>        loader<span class="token punctuation">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span>        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">// 预设：指示 babel 做怎么样的兼容性处理</span>          presets<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">[</span>              <span class="token string">'@babel/preset-env'</span><span class="token punctuation">,</span>              <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">// 按需加载</span>                useBuiltIns<span class="token punctuation">:</span> <span class="token string">'usage'</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// 指定core-js版本</span>                corejs<span class="token punctuation">:</span> <span class="token punctuation">{</span>                  version<span class="token punctuation">:</span> <span class="token number">3</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span>                <span class="token comment" spellcheck="true">// 指定兼容性做到哪个版本的浏览器</span>                targets<span class="token punctuation">:</span> <span class="token punctuation">{</span>                  chrome<span class="token punctuation">:</span> <span class="token string">'60'</span><span class="token punctuation">,</span>                  firefox<span class="token punctuation">:</span> <span class="token string">'60'</span><span class="token punctuation">,</span>                  ie<span class="token punctuation">:</span> <span class="token string">'9'</span><span class="token punctuation">,</span>                  safari<span class="token punctuation">:</span> <span class="token string">'10'</span><span class="token punctuation">,</span>                  edge<span class="token punctuation">:</span> <span class="token string">'17'</span>                <span class="token punctuation">}</span>              <span class="token punctuation">}</span>            <span class="token punctuation">]</span>          <span class="token punctuation">]</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      template<span class="token punctuation">:</span> <span class="token string">'./src/index.html'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i babel-loader @babel/preset-env @babel/polyfill @babel/core -D</code></pre><h4 id="6-html-amp-javascript-压缩"><a href="#6-html-amp-javascript-压缩" class="headerlink" title="6. html &amp; javascript 压缩"></a>6. html &amp; javascript 压缩</h4><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/*** webpack.config.js**/</span><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  entry<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'build.js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 生产环境自动压缩 js 代码</span>  mode<span class="token punctuation">:</span> <span class="token string">'production'</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      template<span class="token punctuation">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// html 代码压缩</span>      minify<span class="token punctuation">:</span> <span class="token punctuation">{</span>        collapseWhitespace<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 移除空格</span>        removeComments<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">// 移除注释</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><h4 id="7-生产环境配置"><a href="#7-生产环境配置" class="headerlink" title="7. 生产环境配置"></a>7. 生产环境配置</h4><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/*** webpack.config.js**/</span><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'mini-css-extract-plugin'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// css 兼容性处理</span><span class="token keyword">const</span> OptimizeCssAssetsWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'optimize-css-assets-webpack-plugin'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// css 代码压缩</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>NODE_ENV <span class="token operator">=</span> <span class="token string">'development'</span><span class="token keyword">const</span> commonCssLoader <span class="token operator">=</span> <span class="token punctuation">[</span>  MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>  <span class="token string">'css-loader'</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 需要在 package.json 中定义 browserslist</span>  <span class="token punctuation">{</span>    loader<span class="token punctuation">:</span> <span class="token string">'postcss-loader'</span><span class="token punctuation">,</span>    ident<span class="token punctuation">:</span> <span class="token string">'postcss'</span><span class="token punctuation">,</span>    options<span class="token punctuation">:</span> <span class="token punctuation">{</span>      postcssOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>        plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">[</span><span class="token string">'postcss-preset-env'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  entry<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'build.js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// js 代码压缩</span>  mode<span class="token punctuation">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        test<span class="token punctuation">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>        use<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>commonCssLoader<span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        test<span class="token punctuation">:</span> <span class="token regex">/\.less$/</span><span class="token punctuation">,</span>        use<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>commonCssLoader<span class="token punctuation">,</span> <span class="token string">'less-loader'</span><span class="token punctuation">]</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// package.json 中 eslintConfig 中的设置</span>        test<span class="token punctuation">:</span> <span class="token regex">/\.js$/</span><span class="token punctuation">,</span>        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 优先执行 eslint ，然后执行 babel</span>        enforce<span class="token punctuation">:</span> <span class="token string">'pre'</span><span class="token punctuation">,</span>        loader<span class="token punctuation">:</span> <span class="token string">'eslint-loader'</span><span class="token punctuation">,</span>        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">// 自动修复 eslint 错误</span>          fix<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        test<span class="token punctuation">:</span> <span class="token regex">/\.js$/</span><span class="token punctuation">,</span>        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>        loader<span class="token punctuation">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span>        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>          presets<span class="token punctuation">:</span> <span class="token punctuation">[</span>            <span class="token punctuation">[</span>              <span class="token string">'@babel/preset-env'</span><span class="token punctuation">,</span>              <span class="token punctuation">{</span>                useBuiltIns<span class="token punctuation">:</span> <span class="token string">'usage'</span><span class="token punctuation">,</span>                corejs<span class="token punctuation">:</span> <span class="token punctuation">{</span> version<span class="token punctuation">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>                targets<span class="token punctuation">:</span> <span class="token punctuation">{</span>                  chrome<span class="token punctuation">:</span> <span class="token string">'60'</span><span class="token punctuation">,</span>                  firefox<span class="token punctuation">:</span> <span class="token string">'60'</span><span class="token punctuation">,</span>                  ie<span class="token punctuation">:</span> <span class="token string">'9'</span><span class="token punctuation">,</span>                  safari<span class="token punctuation">:</span> <span class="token string">'10'</span><span class="token punctuation">,</span>                  edge<span class="token punctuation">:</span> <span class="token string">'17'</span>                <span class="token punctuation">}</span>              <span class="token punctuation">}</span>            <span class="token punctuation">]</span>          <span class="token punctuation">]</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 问题：默认处理不了 html 中 img 图片（使用 html-loader 解决）</span>        test<span class="token punctuation">:</span> <span class="token regex">/\.(jpg|png|gif)$/</span><span class="token punctuation">,</span>        <span class="token comment" spellcheck="true">// 只有一个 loader 可以直接 loader，不需要使用 use</span>        <span class="token comment" spellcheck="true">// 下载 url-loader file-loader 两个包</span>        loader<span class="token punctuation">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span>        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">// 图片大小小于8kb就会被base64处理</span>          <span class="token comment" spellcheck="true">// 优点：减少请求数量</span>          <span class="token comment" spellcheck="true">// 缺点：图片体积会更大（文件请求速度更慢）</span>          limit<span class="token punctuation">:</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span>          <span class="token comment" spellcheck="true">// 问题：url-loader 默认使用 ES6 模块化解析</span>          <span class="token comment" spellcheck="true">//             html-loader 默认使用 commonjs 解析，解析会报错</span>          <span class="token comment" spellcheck="true">// 解决：关闭 ES6 模块化处理</span>          esModule<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>          <span class="token comment" spellcheck="true">// 给图片重命名，取hash前10位，取图片原扩展名</span>          name<span class="token punctuation">:</span> <span class="token string">'[hash:10].[ext]'</span><span class="token punctuation">,</span>          <span class="token comment" spellcheck="true">// 输出路径</span>          publicPath<span class="token punctuation">:</span> <span class="token string">'../'</span><span class="token punctuation">,</span>          outputPath<span class="token punctuation">:</span> <span class="token string">'images'</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 专门处理 html 中 img 文件图片</span>        <span class="token comment" spellcheck="true">// 负责引入 img 图片，能被 url-loader 处理</span>        test<span class="token punctuation">:</span> <span class="token regex">/\.html$/</span><span class="token punctuation">,</span>        loader<span class="token punctuation">:</span> <span class="token string">'html-loader'</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 打包其他资源</span>        exclude<span class="token punctuation">:</span> <span class="token regex">/\.(html|js|css|less|jpg|png|gif)$/</span><span class="token punctuation">,</span>        loader<span class="token punctuation">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span>        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>          name<span class="token punctuation">:</span> <span class="token string">'[hash:10].[ext]'</span><span class="token punctuation">,</span>          publicPath<span class="token punctuation">:</span> <span class="token string">'./'</span><span class="token punctuation">,</span>          outputPath<span class="token punctuation">:</span> <span class="token string">'otherFile'</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      filename<span class="token punctuation">:</span> <span class="token string">'css/index.css'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      template<span class="token punctuation">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// html 代码压缩</span>      minify<span class="token punctuation">:</span> <span class="token punctuation">{</span>        collapseWhitespace<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        removeComments<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token keyword">new</span> <span class="token class-name">OptimizeCssAssetsWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 特点：只会在内存中打包，不会有任何输出</span>  devServer<span class="token punctuation">:</span> <span class="token punctuation">{</span>    contentBase<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 启动 gzip 压缩</span>    compress<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    port<span class="token punctuation">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 自动打开默认浏览器</span>    open<span class="token punctuation">:</span> <span class="token boolean">true</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"a"</span><span class="token punctuation">,</span>  <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">,</span>  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"index.js"</span><span class="token punctuation">,</span>  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"test"</span><span class="token operator">:</span> <span class="token string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"keywords"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>  <span class="token property">"license"</span><span class="token operator">:</span> <span class="token string">"ISC"</span><span class="token punctuation">,</span>  <span class="token property">"devDependencies"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"@babel/core"</span><span class="token operator">:</span> <span class="token string">"^7.12.3"</span><span class="token punctuation">,</span>    <span class="token property">"@babel/polyfill"</span><span class="token operator">:</span> <span class="token string">"^7.12.1"</span><span class="token punctuation">,</span>    <span class="token property">"@babel/preset-env"</span><span class="token operator">:</span> <span class="token string">"^7.12.1"</span><span class="token punctuation">,</span>    <span class="token property">"babel-loader"</span><span class="token operator">:</span> <span class="token string">"^8.1.0"</span><span class="token punctuation">,</span>    <span class="token property">"core-js"</span><span class="token operator">:</span> <span class="token string">"^3.6.5"</span><span class="token punctuation">,</span>    <span class="token property">"css-loader"</span><span class="token operator">:</span> <span class="token string">"^5.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"eslint"</span><span class="token operator">:</span> <span class="token string">"^7.11.0"</span><span class="token punctuation">,</span>    <span class="token property">"eslint-config-airbnb-base"</span><span class="token operator">:</span> <span class="token string">"^14.2.0"</span><span class="token punctuation">,</span>    <span class="token property">"eslint-loader"</span><span class="token operator">:</span> <span class="token string">"^4.0.2"</span><span class="token punctuation">,</span>    <span class="token property">"eslint-plugin-import"</span><span class="token operator">:</span> <span class="token string">"^2.22.1"</span><span class="token punctuation">,</span>    <span class="token property">"file-loader"</span><span class="token operator">:</span> <span class="token string">"^6.1.1"</span><span class="token punctuation">,</span>    <span class="token property">"html-loader"</span><span class="token operator">:</span> <span class="token string">"^1.3.2"</span><span class="token punctuation">,</span>    <span class="token property">"html-webpack-plugin"</span><span class="token operator">:</span> <span class="token string">"^4.5.0"</span><span class="token punctuation">,</span>    <span class="token property">"less"</span><span class="token operator">:</span> <span class="token string">"^3.12.2"</span><span class="token punctuation">,</span>    <span class="token property">"less-loader"</span><span class="token operator">:</span> <span class="token string">"^7.0.2"</span><span class="token punctuation">,</span>    <span class="token property">"mini-css-extract-plugin"</span><span class="token operator">:</span> <span class="token string">"^1.1.0"</span><span class="token punctuation">,</span>    <span class="token property">"optimize-css-assets-webpack-plugin"</span><span class="token operator">:</span> <span class="token string">"^5.0.4"</span><span class="token punctuation">,</span>    <span class="token property">"postcss-loader"</span><span class="token operator">:</span> <span class="token string">"^4.0.4"</span><span class="token punctuation">,</span>    <span class="token property">"postcss-preset-env"</span><span class="token operator">:</span> <span class="token string">"^6.7.0"</span><span class="token punctuation">,</span>    <span class="token property">"style-loader"</span><span class="token operator">:</span> <span class="token string">"^2.0.0"</span><span class="token punctuation">,</span>    <span class="token property">"url-loader"</span><span class="token operator">:</span> <span class="token string">"^4.1.1"</span><span class="token punctuation">,</span>    <span class="token property">"webpack"</span><span class="token operator">:</span> <span class="token string">"^5.1.3"</span><span class="token punctuation">,</span>    <span class="token property">"webpack-cli"</span><span class="token operator">:</span> <span class="token string">"^4.1.0"</span><span class="token punctuation">,</span>    <span class="token property">"webpack-dev-server"</span><span class="token operator">:</span> <span class="token string">"^3.11.0"</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"browserslist"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"development"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">"last 1 chrome version"</span><span class="token punctuation">,</span>      <span class="token string">"last 1 firefox version"</span><span class="token punctuation">,</span>      <span class="token string">"last 1 safari version"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"production"</span><span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token string">">0.2%"</span><span class="token punctuation">,</span>      <span class="token string">"not dead"</span><span class="token punctuation">,</span>      <span class="token string">"not op_mini all"</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token property">"eslintConfig"</span><span class="token operator">:</span> <span class="token punctuation">{</span>    <span class="token property">"extends"</span><span class="token operator">:</span> <span class="token string">"airbnb-base"</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><h4 id="7-Webpack-优化配置"><a href="#7-Webpack-优化配置" class="headerlink" title="7. Webpack 优化配置"></a>7. Webpack 优化配置</h4><h5 id="1⃣️-HMR-hot-module-replacement-：热模块替换"><a href="#1⃣️-HMR-hot-module-replacement-：热模块替换" class="headerlink" title="1⃣️ HMR (hot module replacement)：热模块替换"></a>1⃣️ HMR (hot module replacement)：热模块替换</h5><blockquote><p>HMR 使用结论</p></blockquote><ul><li>样式文件：可以使用 HMR 功能，因为 style-loader 内部实现了</li><li>js 文件：默认不使用 HMR 功能</li><li>html 文件：默认不使用 HMR 功能，同时 html 不能热更新了</li></ul><blockquote><p>问题解决方案：</p></blockquote><ul><li><p>html 不能热更新了：修改 entry 入口，将 html 文件引入（ spa 项目不用做 HMR 功能）</p></li><li><p>js 文件不使用 HMR 功能：修改 js 代码，添加支持 HMR 功能代码（只能处理非入口文件）</p><pre class=" language-js"><code class="language-js"><span class="token keyword">if</span> <span class="token punctuation">(</span>module<span class="token punctuation">.</span>hot<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 一但 module.hot 为 true，说明开启了 HMR 功能</span>  module<span class="token punctuation">.</span>hot<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token string">'./print.js'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 方法监听 print.js 文件变化，一旦变化，其他模块不会重新打包构建</span>    <span class="token comment" spellcheck="true">// 会执行回调函数</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre></li></ul><p>#####2⃣️ source-map：通过映射追踪源代码错误位置</p><blockquote><p>source-map</p></blockquote><ul><li>生成一个外部 source-map 文件</li><li>精确到错误语句</li></ul><blockquote><p>inline-source-map：</p></blockquote><ul><li>只生成一个内联 source-map</li><li>精确到错误语句</li></ul><blockquote><p>hidden-source-map：</p></blockquote><ul><li>生成一个外部 source-map 文件</li><li>精确到构建后的错误语句位置</li></ul><blockquote><p>eval-source-map：</p></blockquote><ul><li>每个文件都会生成一个内联 source-map</li><li>精确到错误语句</li></ul><blockquote><p>nosources-source-map：</p></blockquote><ul><li>生成一个外部 source-map 文件</li><li>精确到错误语句位置，但无法查看源代码</li></ul><blockquote><p>cheap-source-map：</p></blockquote><ul><li>生成一个外部 source-map 文件</li><li>精确到错误语句所在行</li></ul><blockquote><p>cheap-module-source-map：</p></blockquote><ul><li>生成一个外部 source-map 文件</li><li>精确到错误语句</li></ul><p>开发环境：调试更友好，速度块（eval &gt; inline &gt; cheap &gt; …）–&gt; eval-source-map</p><p>生产环境：源代码隐藏（hidden / nosources），调试更友好（source-map &gt; cheap-module-source-map）</p><h5 id="3⃣️-oneOf"><a href="#3⃣️-oneOf" class="headerlink" title="3⃣️ oneOf"></a>3⃣️ oneOf</h5><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/*** webpack.config.js**/</span><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'mini-css-extract-plugin'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// css 兼容性处理</span><span class="token keyword">const</span> OptimizeCssAssetsWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'optimize-css-assets-webpack-plugin'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// css 代码压缩</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span>NODE_ENV <span class="token operator">=</span> <span class="token string">'development'</span><span class="token keyword">const</span> commonCssLoader <span class="token operator">=</span> <span class="token punctuation">[</span>  MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>  <span class="token string">'css-loader'</span><span class="token punctuation">,</span>  <span class="token punctuation">{</span>    loader<span class="token punctuation">:</span> <span class="token string">'postcss-loader'</span><span class="token punctuation">,</span>    ident<span class="token punctuation">:</span> <span class="token string">'postcss'</span><span class="token punctuation">,</span>    options<span class="token punctuation">:</span> <span class="token punctuation">{</span>      postcssOptions<span class="token punctuation">:</span> <span class="token punctuation">{</span>        plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">[</span><span class="token string">'postcss-preset-env'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">]</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">]</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  entry<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'build.js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// js 代码压缩</span>  mode<span class="token punctuation">:</span> <span class="token string">'development'</span><span class="token punctuation">,</span>  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        test<span class="token punctuation">:</span> <span class="token regex">/\.js$/</span><span class="token punctuation">,</span>        exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>        enforce<span class="token punctuation">:</span> <span class="token string">'pre'</span><span class="token punctuation">,</span>        loader<span class="token punctuation">:</span> <span class="token string">'eslint-loader'</span><span class="token punctuation">,</span>        options<span class="token punctuation">:</span> <span class="token punctuation">{</span>          fix<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">,</span>      <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 以下 loader 只会匹配一个</span>        <span class="token comment" spellcheck="true">// 注意：不能有两个配置处理同一种类型文件</span>        oneOf<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">{</span>            test<span class="token punctuation">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>            use<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>commonCssLoader<span class="token punctuation">]</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            test<span class="token punctuation">:</span> <span class="token regex">/\.less$/</span><span class="token punctuation">,</span>            use<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>commonCssLoader<span class="token punctuation">,</span> <span class="token string">'less-loader'</span><span class="token punctuation">]</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            test<span class="token punctuation">:</span> <span class="token regex">/\.js$/</span><span class="token punctuation">,</span>            exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>            loader<span class="token punctuation">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span>            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>              presets<span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">[</span>                  <span class="token string">'@babel/preset-env'</span><span class="token punctuation">,</span>                  <span class="token punctuation">{</span>                    useBuiltIns<span class="token punctuation">:</span> <span class="token string">'usage'</span><span class="token punctuation">,</span>                    corejs<span class="token punctuation">:</span> <span class="token punctuation">{</span> version<span class="token punctuation">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>                    targets<span class="token punctuation">:</span> <span class="token punctuation">{</span>                      chrome<span class="token punctuation">:</span> <span class="token string">'60'</span><span class="token punctuation">,</span>                      firefox<span class="token punctuation">:</span> <span class="token string">'60'</span><span class="token punctuation">,</span>                      ie<span class="token punctuation">:</span> <span class="token string">'9'</span><span class="token punctuation">,</span>                      safari<span class="token punctuation">:</span> <span class="token string">'10'</span><span class="token punctuation">,</span>                      edge<span class="token punctuation">:</span> <span class="token string">'17'</span>                    <span class="token punctuation">}</span>                  <span class="token punctuation">}</span>                <span class="token punctuation">]</span>              <span class="token punctuation">]</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            test<span class="token punctuation">:</span> <span class="token regex">/\.(jpg|png|gif)$/</span><span class="token punctuation">,</span>            loader<span class="token punctuation">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span>            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>              limit<span class="token punctuation">:</span> <span class="token number">8</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span>              esModule<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>              name<span class="token punctuation">:</span> <span class="token string">'[hash:10].[ext]'</span><span class="token punctuation">,</span>              publicPath<span class="token punctuation">:</span> <span class="token string">'../'</span><span class="token punctuation">,</span>              outputPath<span class="token punctuation">:</span> <span class="token string">'images'</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            test<span class="token punctuation">:</span> <span class="token regex">/\.html$/</span><span class="token punctuation">,</span>            loader<span class="token punctuation">:</span> <span class="token string">'html-loader'</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>          <span class="token punctuation">{</span>            exclude<span class="token punctuation">:</span> <span class="token regex">/\.(html|js|css|less|jpg|png|gif)$/</span><span class="token punctuation">,</span>            loader<span class="token punctuation">:</span> <span class="token string">'file-loader'</span><span class="token punctuation">,</span>            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>              name<span class="token punctuation">:</span> <span class="token string">'[hash:10].[ext]'</span><span class="token punctuation">,</span>              publicPath<span class="token punctuation">:</span> <span class="token string">'./'</span><span class="token punctuation">,</span>              outputPath<span class="token punctuation">:</span> <span class="token string">'otherFile'</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><h5 id="4⃣️-缓存"><a href="#4⃣️-缓存" class="headerlink" title="4⃣️ 缓存"></a>4⃣️ 缓存</h5><ul><li><p>babel 缓存</p><pre class=" language-js"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">{</span>        oneOf<span class="token punctuation">:</span> <span class="token punctuation">[</span>          <span class="token punctuation">{</span>            test<span class="token punctuation">:</span> <span class="token regex">/\.js$/</span><span class="token punctuation">,</span>            exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>            loader<span class="token punctuation">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span>            options<span class="token punctuation">:</span> <span class="token punctuation">{</span>              presets<span class="token punctuation">:</span> <span class="token punctuation">[</span>                <span class="token punctuation">[</span>                  <span class="token string">'@babel/preset-env'</span><span class="token punctuation">,</span>                  <span class="token punctuation">{</span>                    useBuiltIns<span class="token punctuation">:</span> <span class="token string">'usage'</span><span class="token punctuation">,</span>                    corejs<span class="token punctuation">:</span> <span class="token punctuation">{</span> version<span class="token punctuation">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>                    targets<span class="token punctuation">:</span> <span class="token punctuation">{</span>                      chrome<span class="token punctuation">:</span> <span class="token string">'60'</span><span class="token punctuation">,</span>                      firefox<span class="token punctuation">:</span> <span class="token string">'60'</span><span class="token punctuation">,</span>                      ie<span class="token punctuation">:</span> <span class="token string">'9'</span><span class="token punctuation">,</span>                      safari<span class="token punctuation">:</span> <span class="token string">'10'</span><span class="token punctuation">,</span>                      edge<span class="token punctuation">:</span> <span class="token string">'17'</span>                    <span class="token punctuation">}</span>                  <span class="token punctuation">}</span>                <span class="token punctuation">]</span>              <span class="token punctuation">]</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// 开启babel缓存</span>            <span class="token comment" spellcheck="true">// 第二次构建，会读取之前的缓存</span>            cacheDirectory<span class="token punctuation">:</span> <span class="token boolean">true</span>          <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">]</span>      <span class="token punctuation">}</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">}</span></code></pre></li><li><p>文件资源缓存</p><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 避免强缓存，给打包文件加哈希值</span><span class="token comment" spellcheck="true">// 问题：js 和 css 文件使用同一个hash值，重新打包会导致所有缓存失效</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  entry<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'build.[hash:10].js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      filename<span class="token punctuation">:</span> <span class="token string">'css/index.[hash:10].css'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 解决：chunkhash</span><span class="token comment" spellcheck="true">// 根据 chunk 生成 hash 值，如果打包来源同一个 chunk，那么 hash 一样</span><span class="token comment" spellcheck="true">// 问题：js 和 css 文件 hash 值还是一样，原因是 css 是在 js 中被引入的，同属于一个 chunk</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  entry<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'build.[chunkhash:10].js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      filename<span class="token punctuation">:</span> <span class="token string">'css/index.[chunkhash:10].css'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 解决：contenthash</span><span class="token comment" spellcheck="true">// 根据文件内容生成 hash 值，不同文件内容，hash 一定不一样</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  entry<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'build.[contenthash:10].js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      filename<span class="token punctuation">:</span> <span class="token string">'css/index.[contenthash:10].css'</span><span class="token punctuation">,</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">}</span></code></pre></li></ul><h5 id="5⃣️-tree-shaking"><a href="#5⃣️-tree-shaking" class="headerlink" title="5⃣️ tree shaking"></a>5⃣️ tree shaking</h5><blockquote><p>前提：1. 开启 production 环境；2. 必须使用 ES6 模块化</p><p>作用：在应用程序中去除没有使用的代码，使代码体积更小</p><p>问题：</p><p>​    在 package.json 中配置 <code>sideEffects: false</code>，即所有代码都没有副作用</p><p>​    可能会将 css / @babel/pollfill 等文件干掉</p><p>解决：<code>sideEffects: ["*.css"]</code></p></blockquote><h5 id="6⃣️-code-split"><a href="#6⃣️-code-split" class="headerlink" title="6⃣️ code split"></a>6⃣️ code split</h5><ul><li><p>多入口情况</p><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/*** webpack.config.js**/</span><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// css 代码压缩</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 多入口文件</span>    main<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>    page<span class="token punctuation">:</span> <span class="token string">'./src/page.js'</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'[name].[chunkhash:10].js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  mode<span class="token punctuation">:</span> <span class="token string">'production'</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      template<span class="token punctuation">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span>      minify<span class="token punctuation">:</span> <span class="token punctuation">{</span>        collapseWhitespace<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        removeComments<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 可以将 node_modules 中代码单独打包成一个chunk最终输出</span>  <span class="token comment" spellcheck="true">// 自动分析多入口 chunk 中，有无公共的文件，如果有，打包成一个单独的chunk</span>  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>    splitChunks<span class="token punctuation">:</span> <span class="token punctuation">{</span>      chunks<span class="token punctuation">:</span> <span class="token string">'all'</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre></li><li><p>单入口情况</p><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/*** webpack.config.js**/</span><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">// css 代码压缩</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  <span class="token comment" spellcheck="true">// 单入口</span>  entry<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'[name].[chunkhash:10].js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  mode<span class="token punctuation">:</span> <span class="token string">'production'</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      template<span class="token punctuation">:</span> <span class="token string">'./src/index.html'</span><span class="token punctuation">,</span>      minify<span class="token punctuation">:</span> <span class="token punctuation">{</span>        collapseWhitespace<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        removeComments<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 可以将 node_modules 中代码单独打包成一个chunk最终输出</span>  optimization<span class="token punctuation">:</span> <span class="token punctuation">{</span>    splitChunks<span class="token punctuation">:</span> <span class="token punctuation">{</span>      chunks<span class="token punctuation">:</span> <span class="token string">'all'</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 通过 js 代码，让某个文件被单独打包成一个chunk</span><span class="token comment" spellcheck="true">// import 动态导入语法</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment" spellcheck="true">/* webpackChunkName: 'test' */</span><span class="token string">'./test.js'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span>err <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre></li></ul><h5 id="7⃣️-懒加载和预加载"><a href="#7⃣️-懒加载和预加载" class="headerlink" title="7⃣️ 懒加载和预加载"></a>7⃣️ 懒加载和预加载</h5><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 懒加载</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment" spellcheck="true">/* webpackChunkName: 'test' */</span><span class="token string">'./test.js'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>sum <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 预加载：使用之前就将js文件加载好</span><span class="token keyword">import</span><span class="token punctuation">(</span><span class="token comment" spellcheck="true">/* webpackChunkName: 'test', webpackPrefetch: true */</span><span class="token string">'./test.js'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>sum <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre><h5 id="8⃣️-PWA-（渐进式网络开发应用程序）"><a href="#8⃣️-PWA-（渐进式网络开发应用程序）" class="headerlink" title="8⃣️ PWA （渐进式网络开发应用程序）"></a>8⃣️ PWA （渐进式网络开发应用程序）</h5><h5 id="9⃣️-多进程打包"><a href="#9⃣️-多进程打包" class="headerlink" title="9⃣️ 多进程打包"></a>9⃣️ 多进程打包</h5><pre class=" language-js"><code class="language-js"><span class="token punctuation">{</span>  test<span class="token punctuation">:</span> <span class="token regex">/\.js$/</span><span class="token punctuation">,</span>    exclude<span class="token punctuation">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>      use<span class="token punctuation">:</span> <span class="token punctuation">[</span>        <span class="token comment" spellcheck="true">// 开启多进程打包</span>        <span class="token comment" spellcheck="true">// 进程启动大概600ms，进程通信也有开销</span>        <span class="token comment" spellcheck="true">// 只有工作消耗时间比较长，才需要</span>        <span class="token comment" spellcheck="true">// 'thread-loader',</span>        <span class="token punctuation">{</span>          loader<span class="token punctuation">:</span> <span class="token string">'thread-loader'</span><span class="token punctuation">,</span>          options<span class="token punctuation">:</span> <span class="token punctuation">{</span>            workers<span class="token punctuation">:</span> <span class="token number">2</span> <span class="token comment" spellcheck="true">// 进程2个</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>          loader<span class="token punctuation">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span>          options<span class="token punctuation">:</span> <span class="token punctuation">{</span>            presets<span class="token punctuation">:</span> <span class="token punctuation">[</span>              <span class="token punctuation">[</span>                <span class="token string">'@babel/preset-env'</span><span class="token punctuation">,</span>                <span class="token punctuation">{</span>                  useBuiltIns<span class="token punctuation">:</span> <span class="token string">'usage'</span><span class="token punctuation">,</span>                  corejs<span class="token punctuation">:</span> <span class="token punctuation">{</span> version<span class="token punctuation">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>                  targets<span class="token punctuation">:</span> <span class="token punctuation">{</span>                    chrome<span class="token punctuation">:</span> <span class="token string">'60'</span><span class="token punctuation">,</span>                    firefox<span class="token punctuation">:</span> <span class="token string">'60'</span><span class="token punctuation">,</span>                    ie<span class="token punctuation">:</span> <span class="token string">'9'</span><span class="token punctuation">,</span>                    safari<span class="token punctuation">:</span> <span class="token string">'10'</span><span class="token punctuation">,</span>                    edge<span class="token punctuation">:</span> <span class="token string">'17'</span>                  <span class="token punctuation">}</span>                <span class="token punctuation">}</span>              <span class="token punctuation">]</span>            <span class="token punctuation">]</span><span class="token punctuation">,</span>            cacheDirectory<span class="token punctuation">:</span> <span class="token boolean">true</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>      <span class="token punctuation">]</span><span class="token punctuation">}</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i thread-loader -D</code></pre><h5 id="🔟-externals"><a href="#🔟-externals" class="headerlink" title="🔟 externals"></a>🔟 externals</h5><ul><li>配置 externals</li><li>手动在 html 中引入 CDN 链接</li></ul><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  entry<span class="token punctuation">:</span> <span class="token string">'./src/index.js'</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'build.js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'build'</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  mode<span class="token punctuation">:</span> <span class="token string">'production'</span><span class="token punctuation">,</span>  module<span class="token punctuation">:</span> <span class="token punctuation">{</span>    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token comment" spellcheck="true">// loader 的配置</span>    <span class="token punctuation">]</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      template<span class="token punctuation">:</span> <span class="token string">'./src/index.html'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  externals<span class="token punctuation">:</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 忽略 jquery 打包</span>    jquery<span class="token punctuation">:</span> <span class="token string">'jQuery'</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://cdn.bootcdn.net/ajax/libs/jquery/1.10.0/jquery.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre><h5 id="1⃣️1⃣️-DLL-使用-dll-技术，对某些库进行单独打包：jquery-react-vue-…"><a href="#1⃣️1⃣️-DLL-使用-dll-技术，对某些库进行单独打包：jquery-react-vue-…" class="headerlink" title="1⃣️1⃣️ DLL (使用 dll 技术，对某些库进行单独打包：jquery, react, vue …)"></a>1⃣️1⃣️ DLL (使用 dll 技术，对某些库进行单独打包：jquery, react, vue …)</h5><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">/** * webpack.dll.js */</span><span class="token keyword">const</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span><span class="token keyword">const</span> webpack <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'webpack'</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>  entry<span class="token punctuation">:</span> <span class="token punctuation">{</span>    jquery<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'jquery'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  output<span class="token punctuation">:</span> <span class="token punctuation">{</span>    filename<span class="token punctuation">:</span> <span class="token string">'[name].js'</span><span class="token punctuation">,</span>    path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'dll'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    library<span class="token punctuation">:</span> <span class="token string">'[name]_[hash]'</span>  <span class="token comment" spellcheck="true">// 打包的库里面向外暴露出去的内容叫什么名字</span>  <span class="token punctuation">}</span><span class="token punctuation">,</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">webpack<span class="token punctuation">.</span>DllPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      name<span class="token punctuation">:</span> <span class="token string">'[name]_[hash]'</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 映射库的暴露的内容名称</span>      path<span class="token punctuation">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'dll/manifest.json'</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 输出文件路径</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  mode<span class="token punctuation">:</span> <span class="token string">'production'</span><span class="token punctuation">}</span></code></pre><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i add-asset-html-webpack-plugin -D</code></pre><pre><code>/*** webpack.config.js**/const webpack = require('webpack')module.exports = {  plugins: [    // 告诉webpack哪些库不参与打包，同时使用时的名称也得变    new webpack.DllReferencePlugin({      manifest: resolve(__dirname, 'dll/manifest.json')    })  ],}</code></pre><h4 id="8-性能优化总结"><a href="#8-性能优化总结" class="headerlink" title="8 性能优化总结"></a>8 性能优化总结</h4><p><img src="https://front-images.oss-cn-hangzhou.aliyuncs.com/i4/d16af595414a625c54e8d249920c6fac-1760-966.png" alt="webpack 性能优化大纲"></p>]]></content>
      
      
      <categories>
          
          <category> webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络安全</title>
      <link href="posts/45331.html"/>
      <url>posts/45331.html</url>
      
        <content type="html"><![CDATA[<h4 id="1-XSS-攻击"><a href="#1-XSS-攻击" class="headerlink" title="1.  XSS 攻击"></a>1.  XSS 攻击</h4><blockquote><p> XSS 跨站请求攻击</p></blockquote><pre class=" language-js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span></code></pre><ul><li>在 HTML 中内嵌的文本中，恶意内容以 script 标签形成注入</li><li>在内联的  JavaScript 中，拼接的数据突破了原本的限制（字符串，变量，方法名等）</li><li>在标签属性中，恶意内容包含引号，从而突破属性值的限制，注入其他属性或者标签</li><li>在标签的 href、src 等属性中，包含 javascript: 等可执行代码</li><li>在 onload、onerror、onclick 等事件中，注入不受控制代码</li><li>在 style 属性和标签中，包含类似 background-image:url(“javascript:…”); 的代码（新版本浏览器已经可以防范）</li><li>在 style 属性和标签中，包含类似 expression(…) 的 CSS 表达式代码（新版本浏览器已经可以防范）</li><li>一个博客网站，我发表一篇博客，其中嵌入<code>&lt;script&gt;</code>脚本，脚本内容：获取cookie，发送到我的服务器（服务器配合跨域）阅读了的人的cookie就会被盗取</li></ul><blockquote><p> XSS 预防</p></blockquote><ul><li>替换特殊字符，如 <code>&lt; </code>变为 <code>&amp;lt;</code> ，<code>&gt; </code> 变为 <code>&amp;gt;</code></li><li>那么 <code>&lt;script&gt;</code> 就会变为<code>$lt;script&amp;gt;</code> ，直接显示，而不会作为脚本执行</li><li>前端要替换，后端也要做替换，双保险</li><li>主流的前端框架已做好预防</li></ul><h4 id="2-XSRF攻击"><a href="#2-XSRF攻击" class="headerlink" title="2. XSRF攻击"></a>2. XSRF攻击</h4><blockquote><p>XSRF跨站请求伪装</p></blockquote><blockquote><p>XSRF攻击场景</p></blockquote><ul><li>你正在购物，看中了某个商品，商品id是100。付费接口是<code>xxx.com/pay?id=100</code>，但没有任何验证（现在的付费都会有验证，这里作为讲解，所以假设没有验证）。我是攻击者，我看中了一个商品，id是200。我想你发送了一封电子邮件，邮件标题很吸引人。但其实邮件正文隐藏着<code>&lt;img src='xxx.com/pay?id=200'&gt;</code>（并附带有别的执行付费脚本）你点击查看了这封邮件，就帮我购买了id是200的商品。</li></ul><blockquote><p>XSRF预防</p></blockquote><ul><li>使用post接口</li><li>增加验证，例如密码、短信验证码、指纹等</li></ul>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>了解一下 HTTP 发展历程吧</title>
      <link href="posts/a8e7.html"/>
      <url>posts/a8e7.html</url>
      
        <content type="html"><![CDATA[<h1 id="一、HTTP-起源"><a href="#一、HTTP-起源" class="headerlink" title="一、HTTP 起源"></a>一、HTTP 起源</h1><blockquote><p>HTTP 协议始于三十年前蒂姆·伯纳斯 - 李的一篇论文</p></blockquote><h3 id="HTTP-0-9"><a href="#HTTP-0-9" class="headerlink" title="HTTP/0.9"></a>HTTP/0.9</h3><blockquote><p>简单的文本协议，只能获取文本资源</p></blockquote><ol><li>URI：统一资源标识符，作为互联网上资源的唯一身份；</li><li>HTML：超文本标记语言，描述超文本文档；</li><li>HTTP：超文本传输协议，用来传输超文本。</li></ol><h3 id="HTTP-1-0"><a href="#HTTP-1-0" class="headerlink" title="HTTP/1.0"></a>HTTP/1.0</h3><blockquote><p>确立了大部分现在使用的技术，但不是正式标准</p></blockquote><ol><li>增加了 HEAD、POST 等新方法；</li><li>增加了响应状态码，标记可能等错误原因；</li><li>引入了协议版本号概念；</li><li>引入了 HTTP Header 的概念，让 HTTP 处理请求喝想要更加灵活；</li><li>传输的数据不再仅限于文本。</li></ol><h3 id="HTTP-1-1"><a href="#HTTP-1-1" class="headerlink" title="HTTP/1.1"></a>HTTP/1.1</h3><blockquote><p>是目前互联网上使用最广泛的协议，功能也非常完善</p></blockquote><ol><li>增加了 PUT、DELETE 等新方法；</li><li>增加了缓存管理和控制；</li><li>明确了链接管理，允许持久连接；</li><li>允许响应数据分块（chunked），利于传输大文件；</li><li>强制要求 Host 头，让互联网逐主机管称为可能。</li></ol><h3 id="HTTP-2-0"><a href="#HTTP-2-0" class="headerlink" title="HTTP/2.0"></a>HTTP/2.0</h3><blockquote><p>基于 Google 的 SPDY 协议，注重性能改善，但还未普及</p></blockquote><ol><li>二进制协议，不再是纯文本；</li><li>可发起多个请求，废弃了 1.1 里的管道；</li><li>使用专用算法压缩头部，减少数据传输量；</li><li>允许服务器主动向客户端推送数据；</li><li>增强了安全性，“事实上”要求加密通信。</li></ol><h3 id="HTTP-3-0"><a href="#HTTP-3-0" class="headerlink" title="HTTP/3.0"></a>HTTP/3.0</h3><blockquote><p>基于 Google 的 QUIC 协议，是将来的发展方向</p></blockquote><h1 id="二、HTTP-是什么？"><a href="#二、HTTP-是什么？" class="headerlink" title="二、HTTP 是什么？"></a>二、HTTP 是什么？</h1><blockquote><p>超文本传输协议</p></blockquote><ol><li>超文本：它是文字、图片、音频和视频等的混合体</li><li>超链接：从一个超文本跳跃到另一个超文本，形成复杂的非线性、网状的结构关系</li><li>传输：在两点之间传输数据，不能用于广播、寻址或路由</li><li>协议：确立了一种计算机之间交流通信的规范，以及香港的各种控制和错误处理方式</li></ol><h1 id="三、HTTP-相关的各种概念"><a href="#三、HTTP-相关的各种概念" class="headerlink" title="三、HTTP 相关的各种概念"></a>三、HTTP 相关的各种概念</h1><ol><li><code>CDN</code>：内容分发网络，应用了 HTTP 协议里的缓存和代理技术，代替源站响应客户端的请求，主要起到缓存加速的作用；</li><li><code>WAF</code>：网络应用防火墙，应用层面的‘防火墙’，专门检测 HTTP 流量，是防护 Web 应用的安全技术；</li><li>爬虫是另一类 User Agent ，是自动访问网络资源的程序；</li><li><code>Web Service</code>：由 W3C 定义的应用服务开发规范，使用 client-server 主从架构；</li><li>浏览器是 HTTP 协议里的请求方，即 User Agent；</li><li>服务器是 HTTP 协议里的应答方，常用的有 Apache 和 Nginx。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTTP </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
